% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_ChordDiagramPlot.R
\name{do_ChordDiagramPlot}
\alias{do_ChordDiagramPlot}
\title{Generate a Chord diagram.}
\usage{
do_ChordDiagramPlot(
  sample,
  first_group,
  last_group,
  big.gap = 10,
  small.gap = 1,
  link.border.color = NA,
  link.border.width = 1,
  highlight_group = NULL,
  alpha.highlight = 25,
  link.sort = NULL,
  link.decreasing = TRUE,
  z_index = FALSE,
  self.link = 1,
  symmetric = FALSE,
  directional = 0,
  direction.type = "diffHeight",
  link.arr.type = "big.arrow",
  scale = FALSE,
  alignment = "default",
  annotationTrack = c("name", "grid", "axis"),
  ...
)
}
\arguments{
\item{sample}{Seurat object.}

\item{first_group}{Character. Categorical metadata variable. First group to be used as origin of the interaction.}

\item{last_group}{Character. Categorical metadata variable. Last group to be used as the end of the interaction.}

\item{big.gap}{Numeric. Space between the groups in first_group and last_group.}

\item{small.gap}{Numeric. Space within the groups.}

\item{link.border.color}{Character. Color for the border of the links. NA = no color.}

\item{link.border.width}{Numeric. Width of the border line of the links.}

\item{highlight_group}{Character. A value from first_group that will be used to highlight only the links coming from it.}

\item{alpha.highlight}{Numeric. A value between 00 (double digits) and 99 to depict the alpha of the highlighted links. No transparency needs "FF"}

\item{link.sort}{pass to \code{\link[circlize]{chordDiagramFromMatrix}} or \code{\link[circlize]{chordDiagramFromDataFrame}}
}

\item{link.decreasing}{pass to \code{\link[circlize]{chordDiagramFromMatrix}} or \code{\link[circlize]{chordDiagramFromDataFrame}}
}

\item{z_index}{Logical. Whether to bring the bigger links to the top.}

\item{self.link}{Numeric. 1 to allow self linking and 2 to prevent them.}

\item{symmetric}{pass to \code{\link[circlize]{chordDiagramFromMatrix}}
}

\item{directional}{Numeric. 0 for non-directional data, 1 for first_group to last_group, -1 for last_group to first_group and 2 for bidirectional.}

\item{direction.type}{Character. One of diffHeight or arrows or both as a character vector.}

\item{link.arr.type}{Character. One of triangle or big.arrow.}

\item{scale}{Logical. Whether to put all nodes the same width.}

\item{alignment}{Character. One of default, vertical or horizontal. Default will allow circlize to put the angle as it wishes, vertical centers the symmetry on the Y axis and horizontal on the X axis.}

\item{annotationTrack}{pass to \code{\link[circlize]{chordDiagramFromMatrix}} or \code{\link[circlize]{chordDiagramFromDataFrame}}
}

\item{...}{Additional parameters to circlize::chordDiagram.}
}
\value{
A circlize plot.
}
\description{
Generate a Chord diagram.
}
\examples{
\dontrun{
TBD
}
}
