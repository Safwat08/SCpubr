% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_CellularStatesPlot.R
\name{do_CellularStatesPlot}
\alias{do_CellularStatesPlot}
\title{Cellular States plot.}
\usage{
do_CellularStatesPlot(
  sample,
  gene_list,
  x1,
  x2 = NULL,
  y1,
  y2 = NULL,
  group.by = NULL,
  colors.use = NULL,
  legend.position = "bottom",
  legend.icon.size = 4,
  legend.ncol = NULL,
  legend.nrow = NULL,
  legend.byrow = FALSE,
  plot.title = NULL,
  plot.subtitle = NULL,
  plot.caption = NULL,
  font.size = 14,
  font.type = "sans",
  xlab = NULL,
  ylab = NULL,
  axis.ticks = TRUE,
  axis.text = TRUE,
  verbose = FALSE,
  enforce_symmetry = FALSE,
  plot_marginal_distributions = FALSE,
  marginal.type = "density",
  marginal.size = 5,
  marginal.group = TRUE,
  plot_cell_borders = FALSE,
  plot_enrichment_scores = FALSE,
  border.size = 1.5,
  border.color = "black",
  pt.size = 2,
  raster = F,
  raster.dpi = 1024,
  plot_features = FALSE,
  features = NULL,
  viridis_color_map = "D"
)
}
\arguments{
\item{sample}{Seurat object.}

\item{gene_list}{Named list of lists of marker genes to query for enrichment.}

\item{x1}{A name of a list from gene_list. First feature in the X axis. Will go on the right side of the X axis if y2 is not provided and top-right quadrant if provided.}

\item{x2}{A name of a list from gene_list. Second feature on the X axis. Will go on the left side of the X axis if y2 is not provided and top-left quadrant if provided.}

\item{y1}{A name of a list from gene_list. First feature on the Y axis. Will become the Y axis if y2 is not provided and bottom-right quadrant if provided.}

\item{y2}{A name of a list from gene_list. Second feature on the Y axis. Will become the bottom-left quadrant if provided.}

\item{group.by}{Metadata variable to color the cells by. Defaults to current identities.}

\item{colors.use}{Named vector with the names of the unique values in the categorical variable and values the HEX codes for the colors.}

\item{legend.position}{Position of the legend in the plot. One of: top, bottom, left, right.}

\item{legend.icon.size}{Numeric. Size of the icons in legend.}

\item{legend.ncol, legend.nrow}{Number of columns/rows in the legend.}

\item{legend.byrow}{Logical stating whether the legend is filled by row or not.}

\item{plot.title, plot.subtitle, plot.caption}{Title to use in the plot.}

\item{font.size}{Overall font.size of the plot.}

\item{font.type}{Character. Base font for the plot. One of mono, serif or sans.}

\item{xlab}{Title for the X axis. Only works if y2 is not set up.}

\item{ylab}{Title for the Y axis. Only works if y2 is not set up.}

\item{axis.ticks}{Whether to show axis ticks.}

\item{axis.text}{Whether to show axis text.}

\item{verbose}{Verbose function?}

\item{enforce_symmetry}{Logical. Whether to enforce the plot to follow a symmetry (3 variables, the X axis has 0 as center, 4 variables, all axis have the same range and the plot is squared).}

\item{plot_marginal_distributions}{Logical. Whether to plot marginal distributions on the figure or not.}

\item{marginal.type}{Character. One of density", "histogram", "boxplot", "violin", "densigram". Defaults to density.}

\item{marginal.size}{Numeric. Size ratio between the main and marginal plots. 5 means that the main plot is 5 times bigger than the marginal plots.}

\item{marginal.group}{Logical. Whether to group the marginal distribution by group.by or current identities.}

\item{plot_cell_borders}{Logical. Whether to plot border around cells.}

\item{plot_enrichment_scores}{Logical. Whether to report enrichment scores for the input lists as plots.}

\item{border.size}{Numeric. Width of the border of the cells.}

\item{border.color}{Character. Color to use for the border of the cells.}

\item{pt.size}{Numeric. Size of the dots.}

\item{raster}{Whether to raster the resulting plot. This is recommendable if plotting a lot of cells.}

\item{raster.dpi}{Numeric. Pixel resolution for rasterized plots. Defaults to 512, as per default \code{Seurat::DimPlot()} behavior.}

\item{plot_features}{Logical. Whether to also report any other feature onto the primary plot.}

\item{features}{Character. Additional features to plot.}

\item{viridis_color_map}{Character. A capital letter from A to H or the scale name as in \link[viridis]{scale_fill_viridis}.}
}
\value{
A ggplot2 object containing a butterfly plot.
}
\description{
This plot aims to show the relationships between distinct enrichment scores. If 3 variables are provided, the relationship is between the Y axis and the dual X axis.
If 4 variables are provided, each corner of the plot represents how enriched the cells are in that given list. How to interpret this? In a 3-variable plot, the Y axis
just means one variable. The higher the cells are in the Y axis the more enriched they are in that given variable. The X axis is a dual parameter one. Cells falling
into each extreme of the axis are highly enriched for either x1 or x2, while cells falling in between are not enriched for any of the two. In a 4-variable plot, each corner
shows the enrichment for one of the 4 given features. Cells will tend to locate in either of the four corners, but there will be cases of cells locating mid-way between two
given corners (enriched in both features) or in the middle of the plot (not enriched for any).
}
\details{
This plots are based on the following publications:
\itemize{
\item Neftel, C. et al. An Integrative Model of Cellular States, Plasticity, and Genetics for Glioblastoma. Cell 178, 835-849.e21 (2019). https://doi.org/10.1016/j.cell.2019.06.024
\item Tirosh, I., Venteicher, A., Hebert, C. et al. Single-cell RNA-seq supports a developmental hierarchy in human oligodendroglioma. Nature 539, 309â€“313 (2016). https://doi.org/10.1038/nature20123
}
}
\examples{
\dontrun{
  # Define some gene sets to query. It has to be a named list.
  gene_set <- list("A" = Seurat::VariableFeatures(sample)[1:10],
                   "B" = Seurat::VariableFeatures(sample)[11:20],
                   "C" = Seurat::VariableFeatures(sample)[21:30],
                   "D" = Seurat::VariableFeatures(sample)[31:40])

  # Using two variables: A scatter plot X vs Y.
  p <- SCpubr::do_CellularStatesPlot(sample = sample,
                                     gene_list = gene_set,
                                     x1 = "A",
                                     y1 = "B")
  p

  # Using two variables: Enforce symmetry on the plot.
  p <- SCpubr::do_CellularStatesPlot(sample = sample,
                                     gene_list = gene_set,
                                     x1 = "A",
                                     y1 = "B",
                                     enforce_symmetry = TRUE)
  p

  # Using three variables. Figure from: https://www.nature.com/articles/nature20123.
  p <- SCpubr::do_CellularStatesPlot(sample = sample,
                                     gene_list = gene_set,
                                     x1 = "A",
                                     y1 = "B",
                                     x2 = "C")
  p

  # Using three variables. Enforcing symmetry will align X axis with 0 in the center.
  p <- SCpubr::do_CellularStatesPlot(sample = sample,
                                     gene_list = gene_set,
                                     x1 = "A",
                                     y1 = "B",
                                     x2 = "C",
                                     enforce_symmetry = TRUE)
  p

  # Using four variables. Figure from: https://pubmed.ncbi.nlm.nih.gov/31327527/
  p <- SCpubr::do_CellularStatesPlot(sample = sample,
                                     gene_list = gene_set,
                                     x1 = "A",
                                     y1 = "C",
                                     x2 = "B",
                                     y2 = "D")
  p

  # Using four variables. Enforcing symmetry will make the scatter plot squared.
  p <- SCpubr::do_CellularStatesPlot(sample = sample,
                                     gene_list = gene_set,
                                     x1 = "A",
                                     y1 = "C",
                                     x2 = "B",
                                     y2 = "D",
                                     enforce_simmetry = TRUE)
  p
}
}
