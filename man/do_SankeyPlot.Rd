% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_SankeyPlot.R
\name{do_SankeyPlot}
\alias{do_SankeyPlot}
\title{Do Sankey or Alluvial plots.}
\usage{
do_SankeyPlot(
  sample,
  first_group,
  last_group,
  type = "sankey",
  middle_groups = NULL,
  width = 0.1,
  space = ifelse(type == "sankey", 0.05 * ncol(sample), 0),
  position = "identity",
  node.fill = "white",
  node.color = "white",
  flow.alpha = 0.75,
  flow.color = "black",
  text_size = 3,
  text_color = "black",
  font.size = 14,
  font.type = "sans",
  smooth = 8,
  use_labels = FALSE,
  hjust = NULL,
  colors.first = NULL,
  colors.middle = NULL,
  colors.last = NULL,
  plot.title = NULL,
  plot.subtitle = NULL,
  plot.caption = NULL
)
}
\arguments{
\item{sample}{\strong{\code{\link[SeuratObject]{Seurat}}} | A Seurat object, generated by \link[Seurat]{CreateSeuratObject}.}

\item{first_group}{\strong{\code{\link[base]{character}}} | Categorical metadata variable. First group of nodes of the sankey plot.}

\item{last_group}{\strong{\code{\link[base]{character}}} | Categorical metadata variable. Last group of nodes of the sankey plot.}

\item{type}{\strong{\code{\link[base]{character}}} | Type of plot to make. One of:
\itemize{
\item \emph{\code{sankey}}: Generates a sankey plot.
\item \emph{\code{alluvial}}: Generated an Alluvial plot, a kind of sankey plot where all groups have the same height.
}}

\item{middle_groups}{\strong{\code{\link[base]{character}}} | Categorical metadata variable. Vector of groups of nodes of the sankey plot.}

\item{width}{\strong{\code{\link[base]{numeric}}} | Width of the nodes.}

\item{space}{\strong{\code{\link[base]{numeric}}} | Vertical space between the nodes. It appears to be equal to a single cell. Use big numbers to see a difference (like, 1000 or 10000).}

\item{position}{\strong{\code{\link[base]{character}}} | GGplot2 position.}

\item{node.fill}{\strong{\code{\link[base]{character}}} | Color to fill the nodes.}

\item{node.color}{\strong{\code{\link[base]{character}}} | Color for the contour of the nodes.}

\item{flow.alpha}{\strong{\code{\link[base]{character}}} | Alpha of the connections.}

\item{flow.color}{\strong{\code{\link[base]{character}}} | Color for the contour of the connections.}

\item{text_size}{\strong{\code{\link[base]{numeric}}} | Size of the labels.}

\item{text_color}{\strong{\code{\link[base]{character}}} | Color of the labels.}

\item{font.size}{\strong{\code{\link[base]{numeric}}} | Overall font size of the plot. All plot elements will have a size relationship with this font size.}

\item{font.type}{\strong{\code{\link[base]{character}}} | Base font family for the plot. One of:
\itemize{
\item \emph{\code{mono}}: Mono spaced font.
\item \emph{\code{serif}}: Serif font family.
\item \emph{\code{sans}}: Default font family.
}}

\item{smooth}{\strong{\code{\link[base]{numeric}}} | How smooth the connections are.}

\item{use_labels}{\strong{\code{\link[base]{logical}}} | Whether to use labels or text for the node names.}

\item{hjust}{\strong{\code{\link[base]{numeric}}} | General hjust for the labels.}

\item{colors.first, colors.middle, colors.last}{\strong{\code{\link[base]{character}}} | Named vector of colors equal to ALL unique values in first_group, middle_groups, or last_group.}

\item{plot.title, plot.subtitle, plot.caption}{\strong{\code{\link[base]{character}}} | Title, subtitle or caption to use in the plot.}
}
\value{
A ggplot2 object.
}
\description{
Do Sankey or Alluvial plots.
}
\examples{
\dontrun{
  # Generate a more fine-grained clustering.
  sample <- Seurat::FindSubCluster(sample, cluster = c("0", "5"), graph.name = "SCT_snn")
  sample$sub.cluster <- paste0("sub_", sample$sub.cluster)

  # Compute basic sankey plot.
  p1 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              last_group = "seurat_clusters",
                              type = "sankey")

  # Compute basic alluvial plot.
  p2 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              last_group = "seurat_clusters",
                              type = "alluvial")

  p <- p1 / p2
  p

  sample$assignment <- ifelse(sample$seurat_clusters \%in\% c("0", "2", "4"), "A", "B")

  # Add more groups.
  p1 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              middle_groups = c("seurat_clusters", "assignment"),
                              last_group = "orig.ident",
                              type = "sankey")

  p2 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              middle_groups = c("seurat_clusters", "assignment"),
                              last_group = "orig.ident",
                              type = "alluvial")

  p <- p1 / p2
  p

  # Control the color and fill of the nodes.
  p1 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              middle_groups = c("seurat_clusters", "assignment"),
                              last_group = "orig.ident",
                              type = "sankey",
                              node.fill = "grey95",
                              node.color = "black")

  p2 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              middle_groups = c("seurat_clusters", "assignment"),
                              last_group = "orig.ident",
                              type = "alluvial",
                              node.fill = "grey95",
                              node.color = "black")

  p <- p1 / p2
  p

  # Control the width of the nodes.
  p1 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              middle_groups = c("seurat_clusters", "assignment"),
                              last_group = "orig.ident",
                              type = "sankey",
                              node.fill = "grey95",
                              node.color = "black")

  p2 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              middle_groups = c("seurat_clusters", "assignment"),
                              last_group = "orig.ident",
                              type = "sankey",
                              node.fill = "grey95",
                              node.color = "black",
                              width = 0.5)

  p <- p1 / p2
  p

  # Control the alignment of the labels.
  p1 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              middle_groups = c("seurat_clusters", "assignment"),
                              last_group = "orig.ident",
                              type = "sankey",
                              node.fill = "grey95",
                              node.color = "black",
                              width = 0.5)

  p2 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              middle_groups = c("seurat_clusters", "assignment"),
                              last_group = "orig.ident",
                              type = "sankey",
                              node.fill = "grey95",
                              node.color = "black",
                              width = 0.5,
                              hjust = 0.5)

  p <- p1 / p2
  p

  # Use text or labels for the nodes.
  p1 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              middle_groups = c("seurat_clusters", "assignment"),
                              last_group = "orig.ident",
                              type = "sankey")

  p2 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              middle_groups = c("seurat_clusters", "assignment"),
                              last_group = "orig.ident",
                              type = "sankey",
                              use_labels = TRUE,
                              text_color = "white")

  p <- p1 / p2
  p

  # Modify the space between nodes.
  p1 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              middle_groups = c("seurat_clusters", "assignment"),
                              last_group = "orig.ident",
                              type = "sankey",
                              space =  1000)

  p2 <- SCpubr::do_SankeyPlot(sample = sample,
                              first_group = "sub.cluster",
                              middle_groups = c("seurat_clusters", "assignment"),
                              last_group = "orig.ident",
                              type = "sankey",
                              space = 5000)

  p <- p1 / p2
  p

  # Modify default colors.
  colors.first <- SCpubr::do_ColorPalette(colors.use = "steelblue",
                                          n = length(unique(sample$sub.cluster)))
  names(colors.first) <- unique(sample$sub.cluster)

  p <- SCpubr::do_SankeyPlot(sample = sample,
                             first_group = "sub.cluster",
                             middle_groups = c("seurat_clusters", "assignment"),
                             last_group = "orig.ident",
                             type = "sankey",
                             colors.first = )
  p
}
}
