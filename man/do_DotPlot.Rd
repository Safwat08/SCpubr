% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_DotPlot.R
\name{do_DotPlot}
\alias{do_DotPlot}
\title{Wrapper for \link[Seurat]{DotPlot}.}
\usage{
do_DotPlot(
  sample,
  features,
  assay = NULL,
  group.by = NULL,
  split.by = NULL,
  legend = TRUE,
  dot.scale = 6,
  colors.use = c("grey75", "#014f86"),
  legend.position = "right",
  plot.title = NULL,
  plot.subtitle = NULL,
  plot.caption = NULL,
  xlab = NULL,
  ylab = NULL,
  fontsize = 14,
  cluster.idents = FALSE,
  flip = FALSE,
  rotate_x_labels = NULL,
  scale.by = "size"
)
}
\arguments{
\item{sample}{Seurat object.}

\item{features}{Features to represent.}

\item{assay}{Assay to use. Defaults to the current assay.}

\item{group.by}{Variable you want the cells to be colored for.}

\item{split.by}{Split into as many plots as unique values in the variable provided.}

\item{legend}{Whether to plot the legend or not.}

\item{dot.scale}{Scale the size of the dots.}

\item{colors.use}{Two colors if split.by is not set, which will define a gradient. As many numbers as unique values in split.by, if set, which each own will define its own gradient. Defaults to predefined color scales if not provided.}

\item{legend.position}{Position of the legend in the plot. Will only work if legend is set to TRUE.}

\item{plot.title, plot.subtitle, plot.caption}{Title to use in the plot.}

\item{xlab}{Title for the X axis.}

\item{ylab}{Title for the Y axis.}

\item{fontsize}{Base fontsize of the plot.}

\item{cluster.idents}{Logical. Whether to cluster the identities based on the expression of the features.}

\item{flip}{Whether to flip the axis.}

\item{rotate_x_labels}{Logical. Whether to rotate X axis labels to horizontal or not. If multiple features, a vector of logical values of the same length.}

\item{scale.by}{Whether to scale the size of the dots by radius or size aesthetic.}
}
\value{
A ggplot2 object containing a Dot Plot.
}
\description{
Wrapper for \link[Seurat]{DotPlot}.
}
\examples{
\dontrun{
  # Basic Dot plot.
  p <- SCpubr::do_DotPlot(sample = sample,
                          features = "CD14")

  # Querying multiple features.
  genes <- c("IL7R", "CCR7", "CD14", "LYZ",
             "S100A4", "MS4A1", "CD8A", "FCGR3A",
             "MS4A7", "GNLY", "NKG7", "FCER1A",
             "CST3", "PPBP")
  p <- SCpubr::do_DotPlot(sample = sample,
                          features = genes)

  # Querying multiple features as a named list - splitting by each item in list.
  # Genes have to be unique.
  genes <- list("Naive CD4+ T" = c("IL7R", "CCR7"),
                "CD14+ Mono" = c("CD14", "LYZ"),
                "Memory CD4+" = c("S100A4"),
                "B" = c("MS4A1"),
                "CD8+ T" = c("CD8A"),
                "FCGR3A+ Mono" = c("FCGR3A", "MS4A7"),
                "NK" = c("GNLY", "NKG7"),
                "DC" = c("FCER1A", "CST3"),
                "Platelet" = c("PPBP"))
  p <- SCpubr::do_DotPlot(sample = sample,
                          features = genes)

  # Clustering the identities.
  genes <- list("Naive CD4+ T" = c("IL7R", "CCR7"),
                "CD14+ Mono" = c("CD14", "LYZ"),
                "Memory CD4+" = c("S100A4"),
                "B" = c("MS4A1"),
                "CD8+ T" = c("CD8A"),
                "FCGR3A+ Mono" = c("FCGR3A", "MS4A7"),
                "NK" = c("GNLY", "NKG7"),
                "DC" = c("FCER1A", "CST3"),
                "Platelet" = c("PPBP"))
  p <- SCpubr::do_DotPlot(sample = sample,
                          features = genes,
                          cluster.idents = TRUE,
                          plot.title = "Clustered")

  # Inverting the axes.
  genes <- c("IL7R", "CCR7", "CD14", "LYZ",
             "S100A4", "MS4A1", "CD8A", "FCGR3A",
             "MS4A7", "GNLY", "NKG7", "FCER1A",
             "CST3", "PPBP")
  p <- SCpubr::do_DotPlot(sample = sample,
                          features = genes,
                          cluster.idents = TRUE,
                          plot.title = "Clustered",
                          flip = T)

  # Modifying default colors.
  # Two colors to generate a gradient.
  genes <- c("IL7R", "CCR7", "CD14", "LYZ",
             "S100A4", "MS4A1", "CD8A", "FCGR3A",
             "MS4A7", "GNLY", "NKG7", "FCER1A",
             "CST3", "PPBP")
  p <- SCpubr::do_DotPlot(sample = sample,
                          features = genes,
                          colors.use = c("#001219", "#e9d8a6")
}
}
