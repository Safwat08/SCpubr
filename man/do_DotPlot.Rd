% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_DotPlot.R
\name{do_DotPlot}
\alias{do_DotPlot}
\title{Wrapper for \link[Seurat]{DotPlot}.}
\usage{
do_DotPlot(
  sample,
  features,
  assay = NULL,
  group.by = NULL,
  split.by = NULL,
  legend.type = "colorbar",
  legend.position = "bottom",
  legend.framewidth = 1.5,
  legend.tickwidth = 1.5,
  legend.length = 20,
  legend.width = 1,
  legend.framecolor = "grey50",
  legend.tickcolor = "white",
  dot.scale = 6,
  colors.use = c("#bdc3c7", "#2c3e50"),
  plot.title = NULL,
  plot.subtitle = NULL,
  plot.caption = NULL,
  xlab = NULL,
  ylab = NULL,
  font.size = 14,
  font.type = "sans",
  cluster.idents = FALSE,
  flip = FALSE,
  rotate_x_axis_labels = TRUE,
  scale.by = "size",
  use_viridis = TRUE,
  viridis_color_map = "G",
  viridis_direction = -1,
  na.value = "grey75",
  dot_border = TRUE,
  plot.grid = TRUE,
  grid.color = "grey75",
  grid.type = "dashed"
)
}
\arguments{
\item{sample}{\strong{\code{\link[SeuratObject]{Seurat}}} | A Seurat object, generated by \link[Seurat]{CreateSeuratObject}.}

\item{features}{\strong{\code{\link[base]{character}}} | Features to represent.}

\item{assay}{\strong{\code{\link[base]{character}}} | Assay to use. Defaults to the current assay.}

\item{group.by}{\strong{\code{\link[base]{character}}} | Metadata variable to group the output by. Has to be a character of factor column.}

\item{split.by}{\strong{\code{\link[base]{character}}} | Secondary metadta variable to further group (split) the output by. Has to be a character of factor column.}

\item{legend.type}{\strong{\code{\link[base]{character}}} | Type of legend to display. One of:
\itemize{
\item \emph{\code{normal}}: Default legend displayed by \pkg{ggplot2}.
\item \emph{\code{colorbar}}: Redefined colorbar legend, using \link[ggplot2]{guide_colorbar}.
\item \emph{\code{colorsteps}}: Redefined legend with colors going by range, in steps, using \link[ggplot2]{guide_colorsteps}.
}}

\item{legend.position}{\strong{\code{\link[base]{character}}} | Position of the legend in the plot. One of:
\itemize{
\item \emph{\code{top}}: Top of the figure.
\item \emph{\code{bottom}}: Bottom of the figure.
\item \emph{\code{left}}: Left of the figure.
\item \emph{\code{right}}: Right of the figure.
\item \emph{\code{none}}: No legend is displayed.
}}

\item{legend.framewidth, legend.tickwidth}{\strong{\code{\link[base]{numeric}}} | Width of the lines of the box in the legend.}

\item{legend.length, legend.width}{\strong{\code{\link[base]{numeric}}} | Length and width of the legend. Will adjust automatically depending on legend side.}

\item{legend.framecolor, legend.tickcolor}{\strong{\code{\link[base]{character}}} | Color of the lines of the box in the legend.}

\item{dot.scale}{\strong{\code{\link[base]{numeric}}} | Scale the size of the dots.}

\item{colors.use}{\strong{\code{\link[base]{character}}} | Two colors if split.by is not set, which will define a gradient. As many numbers as unique values in split.by, if set, which each own will define its own gradient. Defaults to predefined color scales if not provided.}

\item{plot.title, plot.subtitle, plot.caption}{\strong{\code{\link[base]{character}}} | Title, subtitle or caption to use in the plot.}

\item{xlab, ylab}{\strong{\code{\link[base]{character}}} | Titles for the X and Y axis.}

\item{font.size}{\strong{\code{\link[base]{numeric}}} | Overall font size of the plot. All plot elements will have a size relationship with this font size.}

\item{font.type}{\strong{\code{\link[base]{character}}} | Base font family for the plot. One of:
\itemize{
\item \emph{\code{mono}}: Mono spaced font.
\item \emph{\code{serif}}: Serif font family.
\item \emph{\code{sans}}: Default font family.
}}

\item{cluster.idents}{\strong{\code{\link[base]{logical}}} | Whether to cluster the identities based on the expression of the features.}

\item{flip}{\strong{\code{\link[base]{logical}}} | Whether to invert the axis using \link[ggplot2]{coord_flip}.}

\item{rotate_x_axis_labels}{\strong{\code{\link[base]{numeric}}} | Whether to rotate X axis labels.}

\item{scale.by}{\strong{\code{\link[base]{character}}} | How to scale the size of the dots. One of:
\itemize{
\item \emph{\code{radius}}: use radius aesthetic.
\item \emph{\code{size}}: use size aesthetic.
}}

\item{use_viridis}{\strong{\code{\link[base]{logical}}} | Whether to use viridis color scales.}

\item{viridis_color_map}{\strong{\code{\link[base]{character}}} | A capital letter from A to H or the scale name as in \link[viridis]{scale_fill_viridis}.}

\item{viridis_direction}{\strong{\code{\link[base]{numeric}}} | Either 1 or -1. Controls how the gradient of viridis scale is formed.}

\item{na.value}{\strong{\code{\link[base]{character}}} | Color value for NA.}

\item{dot_border}{\strong{\code{\link[base]{logical}}} | Whether to plot a border around dots.}

\item{plot.grid}{\strong{\code{\link[base]{logical}}} | Whether to plot grid lines.}
}
\value{
A ggplot2 object containing a Dot Plot.
}
\description{
Wrapper for \link[Seurat]{DotPlot}.
}
\examples{
\dontrun{
  # Basic Dot plot.
  p <- SCpubr::do_DotPlot(sample = sample,
                          features = "CD14")

  # Querying multiple features.
  genes <- c("IL7R", "CCR7", "CD14", "LYZ",
             "S100A4", "MS4A1", "CD8A", "FCGR3A",
             "MS4A7", "GNLY", "NKG7", "FCER1A",
             "CST3", "PPBP")
  p <- SCpubr::do_DotPlot(sample = sample,
                          features = genes)

  # Querying multiple features as a named list - splitting by each item in list.
  # Genes have to be unique.
  genes <- list("Naive CD4+ T" = c("IL7R", "CCR7"),
                "CD14+ Mono" = c("CD14", "LYZ"),
                "Memory CD4+" = c("S100A4"),
                "B" = c("MS4A1"),
                "CD8+ T" = c("CD8A"),
                "FCGR3A+ Mono" = c("FCGR3A", "MS4A7"),
                "NK" = c("GNLY", "NKG7"),
                "DC" = c("FCER1A", "CST3"),
                "Platelet" = c("PPBP"))
  p <- SCpubr::do_DotPlot(sample = sample,
                          features = genes)

  # Clustering the identities.
  genes <- list("Naive CD4+ T" = c("IL7R", "CCR7"),
                "CD14+ Mono" = c("CD14", "LYZ"),
                "Memory CD4+" = c("S100A4"),
                "B" = c("MS4A1"),
                "CD8+ T" = c("CD8A"),
                "FCGR3A+ Mono" = c("FCGR3A", "MS4A7"),
                "NK" = c("GNLY", "NKG7"),
                "DC" = c("FCER1A", "CST3"),
                "Platelet" = c("PPBP"))
  p <- SCpubr::do_DotPlot(sample = sample,
                          features = genes,
                          cluster.idents = TRUE,
                          plot.title = "Clustered")

  # Inverting the axes.
  genes <- c("IL7R", "CCR7", "CD14", "LYZ",
             "S100A4", "MS4A1", "CD8A", "FCGR3A",
             "MS4A7", "GNLY", "NKG7", "FCER1A",
             "CST3", "PPBP")
  p <- SCpubr::do_DotPlot(sample = sample,
                          features = genes,
                          cluster.idents = TRUE,
                          plot.title = "Clustered",
                          flip = T)

  # Modifying default colors.
  # Two colors to generate a gradient.
  genes <- c("IL7R", "CCR7", "CD14", "LYZ",
             "S100A4", "MS4A1", "CD8A", "FCGR3A",
             "MS4A7", "GNLY", "NKG7", "FCER1A",
             "CST3", "PPBP")
  p <- SCpubr::do_DotPlot(sample = sample,
                          features = genes,
                          colors.use = c("#001219", "#e9d8a6"))
}
}
