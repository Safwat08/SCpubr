% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_PathwayActivityPlot.R
\name{do_PathwayActivityPlot}
\alias{do_PathwayActivityPlot}
\title{Plot Pathway Activities from DecoupleR using Progeny prior knowledge.}
\usage{
do_PathwayActivityPlot(
  sample,
  activities,
  group.by = NULL,
  split.by = NULL,
  plot_FeaturePlots = FALSE,
  plot_Heatmaps = TRUE,
  plot_GeyserPlots = FALSE,
  row_title = NULL,
  column_title = NULL,
  transpose = FALSE,
  cluster_cols = TRUE,
  cluster_rows = TRUE,
  row_names_rot = 0,
  column_names_rot = 90,
  geyser_color.by = NULL,
  cell_size = 5,
  pt.size = 1,
  plot_cell_borders = TRUE,
  border.size = 2,
  na.value = "grey75",
  legend.position = "bottom",
  heatmap.legend.length = 75,
  heatmap.legend.width = 5,
  heatmap.legend.framecolor = "black",
  legend.width = 1,
  legend.length = 20,
  legend.framewidth = 1.5,
  legend.tickwidth = 1.5,
  legend.framecolor = "grey50",
  legend.tickcolor = "white",
  legend.type = "colorbar",
  font.size = 14,
  font.type = "sans",
  rotate_x_axis_labels = FALSE,
  enforce_symmetry = TRUE,
  geyser_order_by_mean = TRUE,
  geyser_scale_type = "continuous"
)
}
\arguments{
\item{sample}{Seurat object.}

\item{activities}{Result of running decoupleR method with progeny regulon prior knowledge.}

\item{group.by}{Character. Variable to group the output by. Defaults to current identities.}

\item{split.by}{Character. Optional variable to split the heatmaps by as well.}

\item{plot_FeaturePlots}{Logical. Compute output feature plots for each of the top regulons.}

\item{plot_Heatmaps}{Logical. Compute output heatmap showcasing the average TF activity per regulon and group.by variable.}

\item{plot_GeyserPlots}{Logical. Compute output GeyserPlots for each of the top regulons and group.by variable.}

\item{row_title, column_title}{Character. Title for the rows in the heatmap. Not working if split.by is used.}

\item{transpose}{Logical. Whether to transpose the heatmap matrix.}

\item{cluster_cols, cluster_rows}{Logical. Whether to cluster rows and columns in the heatmap.}

\item{row_names_rot, column_names_rot}{Numeric. Angle of rotation of the column and row names. Suggested: either 0 or 90.}

\item{geyser_color.by}{Character. Additional variable to color the Geyser plots by, as the Y axis and the color scale are repeated. Has to be a continuous variable.}

\item{cell_size}{Numeric. Size of each cell in the heatmap.}

\item{pt.size}{Numeric. Size of the dots in the non-heatmap plots.}

\item{plot_cell_borders}{Logical. Whether to plot borders around cells in non-heatmap plots.}

\item{border.size}{Numeric. Size of the border.}

\item{na.value}{Character. Color for NA values.}

\item{legend.position}{Character. Position of the legend in the plots. One of: top, bottom, left, right.}

\item{heatmap.legend.length, heatmap.legend.width}{Numeric. Width and length of the legend in the heatmap.}

\item{heatmap.legend.framecolor}{Character. Color of the edges and ticks of the legend in the heatmap.}

\item{legend.length, legend.width}{Length and width of the legend for both feature plots and dot plots. Will adjust automatically depending on legend side.}

\item{legend.framewidth, legend.tickwidth}{Width of the lines of the box in the legend for both feature plots and dot plots.}

\item{legend.framecolor, legend.tickcolor}{Color of the lines of the box in the legend for both feature plots and dot plots.}

\item{legend.type}{Character. Type of legend to display. One of: normal, colorbar, colorsteps.}

\item{font.size}{Numeric. Base font.size of the figure.}

\item{font.type}{Character. Base font for the plot. One of mono, serif or sans.}

\item{rotate_x_axis_labels}{Logical. Whether to rotate the X axis names in the dot plot.}

\item{enforce_symmetry}{Logical. Whether the geyser and feature plot have a symmetrical color scale.}

\item{geyser_order_by_mean}{Logical. Whether to order the X axis by the mean of the values.}

\item{geyser_scale_type}{Character. Type of scale to use. Either "continuous" or "categorical.}
}
\value{
A list containing several output plots according to the user's specifications.
}
\description{
Plot Pathway Activities from DecoupleR using Progeny prior knowledge.
}
\examples{
\dontrun{
  # Define your sample and assay.
  # sample <- your_seurat_object
  # assay <- "your_normalized_data_assay"

  # Retrieve prior knowledge network.
  # network <- decoupleR::get_progeny(organism = "human")
  #
  # # Run weighted means algorithm.
  # activities <- decoupleR::run_wmean(mat = as.matrix(sample@assays[[assay]]@data),
  #                                    network = network,
  #                                    .source = "source",
  #                                    .targe = "target",
  #                                    .mor = "weight",
  #                                    times = 100,
  #                                    minsize = 5)

  # General heatmap.
  out <- SCpubr::do_PathwayActivityPlot(sample = sample,
                                        activities = activities)
  p <- out$heatmaps$average_scores
  p

  # Retrieve feature plots.
  out <- SCpubr::do_PathwayActivityPlot(sample = sample,
                                        activities = activities,
                                        plot_FeaturePlots = TRUE)
  p1 <- SCpubr::do_DimPlot(sample)
  p2 <- out$feature_plots$EGFR
  p <- p1 | p2
  p

  # Retrieve Geyser plots.
  out <- SCpubr::do_PathwayActivityPlot(sample = sample,
                                        activities = activities,
                                        plot_GeyserPlots = TRUE)
  p1 <- SCpubr::do_DimPlot(sample)
  p2 <- out$geyser_plots$EGFR
  p <- p1 | p2
  p

  # Use non-symmetrical color scale.
  out <- SCpubr::do_PathwayActivityPlot(sample = sample,
                                        activities = activities,
                                        plot_GeyserPlots = TRUE,
                                        plot_FeaturePlots = TRUE,
                                        symmetrical_scale = FALSE)
  p1 <- out$feature_plots$EGFR
  p2 <- out$geyser_plots$EGFR

  out <- SCpubr::do_PathwayActivityPlot(sample = sample,
                                        activities = activities,
                                        plot_GeyserPlots = TRUE,
                                        plot_FeaturePlots = TRUE,
                                        symmetrical_scale = TRUE)
  p3 <- out$feature_plots$EGFR
  p4 <- out$geyser_plots$EGFR

  p <- (p1 | p2) / (p3 | p4)
  p

  # Not order Geyser plot by mean values.
  out <- SCpubr::do_PathwayActivityPlot(sample = sample,
                                        activities = activities,
                                        plot_GeyserPlots = TRUE,
                                        symmetrical_scale = TRUE,
                                        geyser_order_by_mean = FALSE)
  p1 <- out$geyser_plots$EGFR

  out <- SCpubr::do_PathwayActivityPlot(sample = sample,
                                        activities = activities,
                                        plot_GeyserPlots = TRUE,
                                        symmetrical_scale = TRUE,
                                        geyser_order_by_mean = TRUE)
  p2 <- out$geyser_plots$EGFR

  p <- p1 | p2
  p

  # Plot a third variable in Geyser plots.
  out <- SCpubr::do_PathwayActivityPlot(sample = sample,
                                        activities = activities,
                                        plot_GeyserPlots = TRUE,
                                        geyser_color.by = "seurat_clusters",
                                        geyser_scale_type = "categorical")
  p1 <- out$geyser_plots$EGFR

  out <- SCpubr::do_PathwayActivityPlot(sample = sample,
                                        activities = activities,
                                        plot_GeyserPlots = TRUE,
                                        geyser_color.by = "nCount_RNA",
                                        geyser_scale_type = "continuous")
  p2 <- out$geyser_plots$EGFR

  p <- p1 | p2
  p

  # Split the heatmap by another variable.
  sample$split.me <- ifelse(sample$seurat_clusters \%in\% c("0", "3", "7"), "Group A","Group B")

  out <- SCpubr::do_PathwayActivityPlot(sample = sample,
                                        activities = activities,
                                        split.by = "split.me")
  p <- out$heatmaps$average_scores
  p
}
}
