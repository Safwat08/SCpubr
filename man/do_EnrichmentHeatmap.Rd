% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_EnrichmentHeatmap.R
\name{do_EnrichmentHeatmap}
\alias{do_EnrichmentHeatmap}
\title{Create enrichment scores heatmaps.}
\usage{
do_EnrichmentHeatmap(
  sample,
  list_genes,
  group.by = NULL,
  split.by = NULL,
  split.horizontal = TRUE,
  column_title = NULL,
  row_title = NULL,
  verbose = FALSE,
  transpose = FALSE,
  cluster_cols = FALSE,
  cluster_rows = FALSE,
  legend_name = "Enrichment",
  row_names_rot = 0,
  column_names_rot = 90,
  colors.use = NULL,
  cell_size = 5,
  na.value = "grey75"
)
}
\arguments{
\item{sample}{Your Seurat object.}

\item{list_genes}{Named list of genes to query to the Seurat object.}

\item{group.by}{Metadata variable to group the values by.}

\item{split.by}{Metadata variable to split the values of group.by into as many individual heatmaps as unique values in split.by.}

\item{split.horizontal}{Logical. Join the individual heatmaps generated by split.by horizontally (TRUE) or vertically (FALSE).}

\item{column_title, row_title}{Title for the columns and rows. Only works with single heatmaps.}

\item{verbose}{Extended output.}

\item{transpose}{Logical. Transpose the resulting heatmap.}

\item{cluster_cols, cluster_rows}{Logical. Cluster the columns or rows.}

\item{legend_name}{Text for the legend title.}

\item{column_names_rot, row_names_rot}{Numeric. Degree in which to}

\item{colors.use}{Vector of 2 colors to use to generate the color scale.}

\item{cell_size}{Numeric. Size of each cell in the heatmap.}

\item{na.value}{Value for NAs.}
}
\value{
A ComplexHeatmap object.
}
\description{
This function computes the enrichment scores for the cells using \link[Seurat]{AddModuleScore} and then aggregates the scores by the metadata variables provided by the user and displays it as a heatmap, computed by \link[ComplexHeatmap]{Heatmap}.
}
\examples{
\donttest{
  # Define list of genes.
  genes <- list("Naive CD4+ T" = c("IL7R", "CCR7"),
                "CD14+ Mono" = c("CD14", "LYZ"),
                "Memory CD4+" = c("S100A4"),
                "B" = c("MS4A1"),
                "CD8+ T" = c("CD8A"),
                "FCGR3A+ Mono" = c("FCGR3A", "MS4A7"),
                "NK" = c("GNLY", "NKG7"),
                "DC" = c("FCER1A", "CST3"),
                "Platelet" = c("PPBP"))

  # Default parameters.
  p <- SCpubr::do_EnrichmentHeatmap(sample = sample,
                                    list_genes = genes)
  p

  # Custom aggregated values.
  p <- SCpubr::do_EnrichmentHeatmap(sample = sample,
                                    list_genes = genes,
                                    group.by = "orig.ident")
  p

  # Transposing the matrix.
  p <- SCpubr::do_EnrichmentHeatmap(sample = sample,
                                    list_genes = genes,
                                    transpose = TRUE)
  p

  # Rotating the labels.
  p <- SCpubr::do_EnrichmentHeatmap(sample = sample,
                                    list_genes = genes,
                                    transpose = TRUE,
                                    column_names_rot = 0)
  p


  # Splitting by a second metadata variable.
  clusters <- c("1", "3", "5", "7", "9")
  sample$custom_group <- ifelse(sample$seurat_clusters \%in\% clusters,
                                "Group A",
                                "Group B")
  p <- SCpubr::do_EnrichmentHeatmap(sample = sample,
                                    list_genes = genes,
                                    transpose = TRUE,
                                    column_names_rot = 0,
                                    cluster_cols = F,
                                    cluster_rows = T,
                                    split.by = "custom_group")
  p

  # Splitting by a second metadata variable and joining vertically.
  p <- SCpubr::do_EnrichmentHeatmap(sample = sample,
                                    list_genes = genes,
                                    transpose = TRUE,
                                    column_names_rot = 0,
                                    cluster_cols = F,
                                    cluster_rows = T,
                                    split.by = "custom_group",
                                    split.horizontal = F)
  p

  # Modifying the tile size.
  p <- SCpubr::do_EnrichmentHeatmap(sample = sample,
                                    list_genes = genes,
                                    transpose = TRUE,
                                    column_names_rot = 0,
                                    cluster_cols = F,
                                    cluster_rows = T,
                                    split.by = "custom_group",
                                    cell_size = 7)
  p

  # Modifying the color scale.
  p <- SCpubr::do_EnrichmentHeatmap(sample = sample,
                                    list_genes = genes,
                                    transpose = TRUE,
                                    column_names_rot = 0,
                                    cluster_cols = F,
                                    cluster_rows = T,
                                    split.by = "custom_group",
                                    colors.use = c("red", "blue"))
  p
}
}
