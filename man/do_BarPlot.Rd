% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_BarPlot.R
\name{do_BarPlot}
\alias{do_BarPlot}
\title{Wrapper for computing publication ready bar plots.}
\usage{
do_BarPlot(
  sample,
  features,
  group.by = NULL,
  labels.order = NULL,
  order.by = NULL,
  position = "stack",
  xlab = NULL,
  ylab = NULL,
  plot.title = NULL,
  plot.subtitle = NULL,
  plot.caption = NULL,
  legend = TRUE,
  legend.position = "right",
  legend.title.position = "top",
  legend.title = FALSE,
  legend.ncol = NULL,
  legend.nrow = NULL,
  font.size = 14,
  font.type = "sans",
  legend.byrow = FALSE,
  colors.use = NULL,
  horizontal = FALSE,
  verbose = TRUE,
  add.summary_labels = FALSE,
  add.subgroup_labels = FALSE,
  repel.subgroup_labels = FALSE,
  repel.summary_labels = FALSE,
  size.labels = 3,
  rotate_x_labels = NULL,
  return_data_matrix = FALSE,
  plot_line_guides = TRUE
)
}
\arguments{
\item{sample}{Seurat object.}

\item{features}{Main variable in the bar plot - This will define the height of the bars. Must be a metadata variable stored in \code{object@meta.data}.}

\item{group.by}{Secondary variable to group the bar plot for - This will define the total number of bars. Must be a metadata variable stored in \code{object@meta.data}.}

\item{labels.order}{Vector of labels to explicitly state the order or the bars. Better fed after knowing the order. This is meant to be used to tweak the end plot if needed.}

\item{order.by}{One of the unique values in group.by that will be used to reorder the bars according to its descending proportion.}

\item{position}{Either "fill" or "stack." Position "fill" will generate a bar plot with one column and the proportions of values for each group inside, while "stack" plots the bars together.}

\item{xlab}{Title for the X axis.}

\item{ylab}{Title for the Y axis.}

\item{plot.title, plot.subtitle, plot.caption}{Title, subtitle or caption to use in the plot.}

\item{legend}{Whether to plot the legend.}

\item{legend.position}{Position of the legend in the plot. Will only work if legend is set to TRUE.}

\item{legend.title.position}{Character stating where to place the title of the legend.}

\item{legend.title}{Logical stating whether the legend title is shown or not.}

\item{legend.ncol, legend.nrow}{Number of columns/rows in the legend.}

\item{font.size}{Base font.size of the figure.}

\item{font.type}{Character. Base font for the plot. One of mono, serif or sans.}

\item{legend.byrow}{Logical stating whether the legend is filled by row or not.}

\item{colors.use}{Palette of colors to use. It must match the group.by variable in terms of length and names.}

\item{horizontal}{Whether to plot the Bar plot horizontally.}

\item{verbose}{Use warnings.}

\item{add.summary_labels}{Logical. Whether to add the total number of values on top of each bar. Only works with position = stack.}

\item{add.subgroup_labels}{Logical. Whether to add the total number of values for each group in the bar. Only works with position = stack.}

\item{repel.subgroup_labels, repel.summary_labels}{Logical. Whether to repel labels to avoid overplotting. This will result in labels not being aligned anymore.}

\item{size.labels}{Numeric. Modify the size of the labels.}

\item{rotate_x_labels}{Logical. Whether to rotate X axis labels to horizontal or not. If multiple features, a vector of logical values of the same length.}

\item{return_data_matrix}{Logical. Whether to also output the data matrix used to generate the bar plot. This is useful to report it for supplementary data.}

\item{plot_line_guides}{Logical. Whether to plot line guides for position = "stack".}
}
\value{
A ggplot2 object containing a Bar plot.
}
\description{
Wrapper for computing publication ready bar plots.
}
\examples{
\dontrun{
  # Basic bar plot showing the number of items in a variable and a title.
  # Legend T/F toggles removes or keeps the legend.
  p <- SCpubr::do_BarPlot(sample = sample,
                          features = "seurat_clusters",
                          legend = F,
                          plot.title = "Number of cells per cluster")

  # Same but horizontal bars.
  p <- SCpubr::do_BarPlot(sample = sample,
                          features = "seurat_clusters",
                          legend = F,
                          horizontal = T)

  # Grouping by a second variable.
  # Position = stack will compute as separate bars.
  p <- SCpubr::do_BarPlot(sample,
                          features = "orig.ident",
                          group.by = "seurat_clusters",
                          position = "stack",
                          legend = T,
                          horizontal = F)
  # Position = fill will compute the proportions of each group in the feature.
  p <- SCpubr::do_BarPlot(sample,
                          features = "orig.ident",
                          group.by = "seurat_clusters",
                          position = "fill",
                          legend = T,
                          horizontal = F)

  # Grouping by a second variable and reordering based on an item in the second variable.
  # Reordering with position = fill will order the bars by descending proportion of order.by.
  p <- SCpubr::do_BarPlot(sample,
                          features = "modified_orig.ident",
                          group.by = "modified_seurat_clusters",
                          plot.title = "Number of cells per cluster and sample",
                          order.by = "1",
                          position = "fill",
                          legend = T,
                          horizontal = F)
  # Reordering with position = stack will order the bars by descending number of order.by.
  p <- SCpubr::do_BarPlot(sample,
                          features = "modified_orig.ident",
                          group.by = "modified_seurat_clusters",
                          plot.title = "Number of cells per sample",
                          order.by = "1",
                          position = "stack",
                          legend = T,
                          horizontal = F)

  # Adding custom colors.
  # Colors must be a named vector of HEX codes of the same lengths as bars/groups to color.
  colors <- c("0" = "#001219",
              "1" = "#005f73",
              "2" = "#0a9396",
              "3" = "#94d2bd",
              "4" = "#e9d8a6",
              "5" = "#ee9b00",
              "6" = "#ca6702",
              "7" = "#bb3e03",
              "8" = "#ae2012",
              "9" = "#9b2226")

  p <- SCpubr::do_BarPlot(sample = sample,
                          features = "seurat_clusters",
                          legend = F,
                          plot.title = "Number of cells per cluster",
                          horizontal = T,
                          colors.use = colors)
}
}
