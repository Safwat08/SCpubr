% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_BarPlot.R
\name{do_BarPlot}
\alias{do_BarPlot}
\title{Create Bar Plots.}
\usage{
do_BarPlot(
  sample,
  group.by,
  order = TRUE,
  split.by = NULL,
  position = "stack",
  font.size = 14,
  font.type = "sans",
  legend.position = "bottom",
  rotate_x_axis_labels = TRUE,
  legend.title = NULL,
  xlab = NULL,
  ylab = NULL,
  colors.use = NULL,
  flip = FALSE,
  plot.title = NULL,
  plot.subtitle = NULL,
  plot.caption = NULL,
  plot.grid = TRUE,
  grid.color = "grey75",
  grid.type = "dashed"
)
}
\arguments{
\item{sample}{\strong{\code{\link[SeuratObject]{Seurat}}} | A Seurat object, generated by \link[Seurat]{CreateSeuratObject}.}

\item{group.by}{\strong{\code{\link[base]{character}}} | Metadata column to compute the counts of. Has to be either a character or factor column.}

\item{order}{\strong{\code{\link[base]{logical}}} | Whether to order the results in descending order of counts.}

\item{split.by}{\strong{\code{\link[base]{character}}} | Metadata column to split the values of group.by by. If not used, defaults to the active idents.}

\item{position}{\strong{\code{\link[base]{character}}} | Position function from \pkg{ggplot2}. One of:
\itemize{
\item \emph{\code{stack}}: Set the bars side by side, displaying the total number of counts. Uses \link[ggplot2]{position_stack}.
\item \emph{\code{fill}}: Set the bars on top of each other, displaying the proportion of counts from the total that each group represents. Uses \link[ggplot2]{position_fill}.
}}

\item{font.size}{\strong{\code{\link[base]{numeric}}} | Overall font size of the plot. All plot elements will have a size relationship with this font size.}

\item{font.type}{\strong{\code{\link[base]{character}}} | Base font family for the plot. One of:
\itemize{
\item \emph{\code{mono}}: Mono spaced font.
\item \emph{\code{serif}}: Serif font family.
\item \emph{\code{sans}}: Default font family.
}}

\item{legend.position}{\strong{\code{\link[base]{character}}} | Position of the legend in the plot. One of:
\itemize{
\item \emph{\code{top}}: Top of the figure.
\item \emph{\code{bottom}}: Bottom of the figure.
\item \emph{\code{left}}: Left of the figure.
\item \emph{\code{right}}: Right of the figure.
\item \emph{\code{none}}: No legend is displayed.
}}

\item{rotate_x_axis_labels}{\strong{\code{\link[base]{numeric}}} | Whether to rotate X axis labels.}

\item{legend.title}{\strong{\code{\link[base]{character}}} | Title for the legend.}

\item{xlab, ylab}{\strong{\code{\link[base]{character}}} | Titles for the X and Y axis.}

\item{colors.use}{\strong{\code{\link[SCpubr]{named_vector}}} | Named vector of valid color representations (either name of HEX codes) with as many named colors as unique values of group.by. If group.by is not provided, defaults to the unique values of \link[Seurat]{Idents}. If not provided, a color scale will be set by default.}

\item{flip}{\strong{\code{\link[base]{logical}}} | Whether to invert the axis using \link[ggplot2]{coord_flip}.}

\item{plot.title, plot.subtitle, plot.caption}{\strong{\code{\link[base]{character}}} | Title, subtitle or caption to use in the plot.}

\item{plot.grid}{\strong{\code{\link[base]{logical}}} | Whether to plot grid lines.}
}
\value{
A ggplot2 object containing a Bar plot.
}
\description{
Create Bar Plots.
}
\examples{
\dontrun{
  # Basic bar plot showing the number of items in a variable and a title.
  # Legend T/F toggles removes or keeps the legend.
  p <- SCpubr::do_BarPlot(sample = sample,
                          features = "seurat_clusters",
                          legend = F,
                          plot.title = "Number of cells per cluster")

  # Same but horizontal bars.
  p <- SCpubr::do_BarPlot(sample = sample,
                          features = "seurat_clusters",
                          legend = F,
                          horizontal = T)

  # Grouping by a second variable.
  # Position = stack will compute as separate bars.
  p <- SCpubr::do_BarPlot(sample,
                          features = "orig.ident",
                          group.by = "seurat_clusters",
                          position = "stack",
                          legend = T,
                          horizontal = F)
  # Position = fill will compute the proportions of each group in the feature.
  p <- SCpubr::do_BarPlot(sample,
                          features = "orig.ident",
                          group.by = "seurat_clusters",
                          position = "fill",
                          legend = T,
                          horizontal = F)

  # Grouping by a second variable and reordering based on an item in the second variable.
  # Reordering with position = fill will order the bars by descending proportion of order.by.
  p <- SCpubr::do_BarPlot(sample,
                          features = "modified_orig.ident",
                          group.by = "modified_seurat_clusters",
                          plot.title = "Number of cells per cluster and sample",
                          order.by = "1",
                          position = "fill",
                          legend = T,
                          horizontal = F)
  # Reordering with position = stack will order the bars by descending number of order.by.
  p <- SCpubr::do_BarPlot(sample,
                          features = "modified_orig.ident",
                          group.by = "modified_seurat_clusters",
                          plot.title = "Number of cells per sample",
                          order.by = "1",
                          position = "stack",
                          legend = T,
                          horizontal = F)

  # Adding custom colors.
  # Colors must be a named vector of HEX codes of the same lengths as bars/groups to color.
  colors <- c("0" = "#001219",
              "1" = "#005f73",
              "2" = "#0a9396",
              "3" = "#94d2bd",
              "4" = "#e9d8a6",
              "5" = "#ee9b00",
              "6" = "#ca6702",
              "7" = "#bb3e03",
              "8" = "#ae2012",
              "9" = "#9b2226")

  p <- SCpubr::do_BarPlot(sample = sample,
                          features = "seurat_clusters",
                          legend = F,
                          plot.title = "Number of cells per cluster",
                          horizontal = T,
                          colors.use = colors)
}
}
